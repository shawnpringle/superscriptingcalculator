<html>
<head>
<!-- Generated by MAKEDOC v1.1, (c) 2000,2003 by David Cuny, Derek Parnell, Matt Lewis -->
<!-- on 2009/07/23 at 00h20m32 -->
<style>h4 {text-align: right}</style>
<title>Documentation for Win32lib v0.70.18</title>
</head>
<body>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h1><a name="MISCELLANEOU">Miscellaneous</a></h1>
<p><h3>Routines that don't easily fit into other categories.
</h3><br>

</p>
<li><a href="#BEEP"><i>proc</i> Beep</a>(atom style) &nbsp;&nbsp;Sounds one of the standard beeps.
<li><a href="#FORMATMSG"><i>func</i> FormatMsg</a>(object pTextCode, sequence pData) &nbsp;&nbsp; Fetches the format template associated with <em>pTextCode</em> and applies <em>pData</em> to it.
<li><a href="#GETOPT"><i>func</i> getOpt</a>(sequence pSource, sequence pCategory, sequence pKey, object pDefault) &nbsp;&nbsp; Retrieves the data associated with <em>pKey</em> in the file <em>pSource</em> under the group <em>pCategory</em>
<li><a href="#GETRANDINT"><i>func</i> getRandInt</a>(atom pMin, atom pMax) &nbsp;&nbsp;Gets a random number.
<li><a href="#MAKESTANDARDNAME"><i>func</i> makeStandardName</a>(sequence Name) &nbsp;&nbsp;Transforms a string into a standardized format suitable for naming things.
<li><a href="#SETCONTAINER"><i>func</i> setContainer</a>(object pNew) &nbsp;&nbsp; Defines the message file that is used by <a href="MISCELLANEOU.htm#USETEXT">Usetext</a>
<li><a href="#SETUSERLANGUAGE"><i>func</i> setUserLanguage</a>(object pNew) &nbsp;&nbsp; Defines or returns the language category that is used by <a href="MISCELLANEOU.htm#USETEXT">UseText</a>
<li><a href="#USETEXT"><i>func</i> UseText</a>(object pTextCode, sequence pDefault) &nbsp;&nbsp; Fetches the text associated with <em>pTextCode</em>
<li><a href="#W32MAXWIDTH"><i>func</i> w32MaxWidth</a>(object pData) &nbsp;&nbsp; Computes the maximum width of elements of <em>pData</em>.
<li><a href="#W32MINSEQUENCESIZE"><i>func</i> w32MinSequenceSize</a>(sequence pList, integer pMinSize, object pNewData) &nbsp;&nbsp; Pads <em>pList</em> to the right until its length reaches <em>pMinSize</em> using <em>pNewData</em> as filler.
<li><a href="#W32RAND32"><i>func</i> w32rand32</a>(atom N) &nbsp;&nbsp;
<li><a href="#W32TOSTRING"><i>func</i> w32ToString</a>(object pData) &nbsp;&nbsp; Assembles a sequence from the substrings in <em>pData</em>, separated by commas.
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="BEEP">[<i>proc</i>]<br>Beep</a> (atom style)</h2>
<h3>Sounds one of the standard beeps.</h3>
Category: <a href="#MISCELLANEOU">Miscellaneous</a><br>
<p><p><p>
 <em>style</em> can be one of ... <br>
 <li> -1  Standard beep using the computer speaker
 <li> MB_ICONASTERISK SystemAsterisk
 <li> MB_ICONEXCLAMATION SystemExclamation
 <li> MB_ICONHAND SystemHand
 <li> MB_ICONQUESTION SystemQuestion
 <li> MB_OK
<p>
Example
<pre>
  Beep( MB_ICONEXCLAMATION )
</pre>
<p>See Also: 
<a href="#FORMATMSG">FormatMsg</a>,
<a href="#GETOPT">getOpt</a>,
<a href="#GETRANDINT">getRandInt</a>,
<a href="#MAKESTANDARDNAME">makeStandardName</a>,
<a href="#SETCONTAINER">setContainer</a>,
<a href="#SETUSERLANGUAGE">setUserLanguage</a>,
<a href="#USETEXT">UseText</a>,
<a href="#W32MAXWIDTH">w32MaxWidth</a>,
<a href="#W32MINSEQUENCESIZE">w32MinSequenceSize</a>,
<a href="#W32RAND32">w32rand32</a>,
<a href="#W32TOSTRING">w32ToString</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="FORMATMSG">[<i>func</i>]<br>FormatMsg</a> (object pTextCode, sequence pData)</h2>
<h3> Fetches the format template associated with <em>pTextCode</em> and applies <em>pData</em> to it.</h3>
<h3>Returns: SEQUENCE: The formatted text.</h3>
Category: <a href="#MISCELLANEOU">Miscellaneous</a><br>
<p><p> This searches the current messages file (see <a href="MISCELLANEOU.htm#SETCONTAINER">setContainer</a> ) for the text code
 in the current language category (see <a href="MISCELLANEOU.htm#SETUSERLANGUAGE">setUserLanguage</a> ) and when found
the function uses it as a template with formatting codes in it.
<p>
 <em>pTextCode</em> is either the code (an integer) to search for templates in the messages file, or
 a message template itself. <br>
 <em>pData</em> is either a single string or a sequence of strings. <br>
<p>
A message template can contain zero or more place-holder tokens. Each token is replaced by its
 respective value from the <em>pData</em> to form the final output. A token is either a two-character
one in the form of '%N' where 'N' is a digit from 1 to 9, or a token in the form '%{X}' where
'X'
<p>
 Example: <br>
Assume you have the following messages file ...
<pre>
[english]
1 = File '%{NAME}' not found in folder '%{PATH}'
2 = Record ID '%1' not found
3 = Record ID '%1' already exists
9 = Internal error: Code '%1'.
5001 = Unknown error code: '%1'
</pre>
<p>
Then we can call this function thus ...
<pre>
      sequence lText
      lText = FormatMsg(1, {"PATH=c:\\temp\\", "NAME=link.opt"} ) -- returns "File 'link.opt' not found in folder 'c:\temp\'"
      lText = FormatMsg(3, "djp") -- returns "Record ID 'djp' already exists"
      lText = FormatMsg(17, "Some Text") -- returns "Unknown error code: Msg#17, Some Text"
      lText = FormatMsg("%1 %3, %2", {"Mr", "Derek", "Parnell"}) -- returns "Mr Parnell, Derek"
</pre>
<p>See Also: 
<a href="#BEEP">Beep</a>,
<a href="#GETOPT">getOpt</a>,
<a href="#GETRANDINT">getRandInt</a>,
<a href="#MAKESTANDARDNAME">makeStandardName</a>,
<a href="#SETCONTAINER">setContainer</a>,
<a href="#SETUSERLANGUAGE">setUserLanguage</a>,
<a href="#USETEXT">UseText</a>,
<a href="#W32MAXWIDTH">w32MaxWidth</a>,
<a href="#W32MINSEQUENCESIZE">w32MinSequenceSize</a>,
<a href="#W32RAND32">w32rand32</a>,
<a href="#W32TOSTRING">w32ToString</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETOPT">[<i>func</i>]<br>getOpt</a> (sequence pSource, sequence pCategory, sequence pKey, object pDefault)</h2>
<h3> Retrieves the data associated with <em>pKey</em> in the file <em>pSource</em> under the group <em>pCategory</em></h3>
<h3>Returns: OBJECT: The associtated data.</h3>
Category: <a href="#MISCELLANEOU">Miscellaneous</a><br>
<p><p> <em>pSource</em> is the name of a text file in which the data can be found. <br>
 <em>pCategory</em> is the name of a category, or grouping, found in <em>pSource</em>. The categories are coded
 in the file in the form <strong></strong>("[" category "]") as the only thing in a line. <br>
 <em>pKey</em> is the key that will be searched for in the category.  If found the associated string
 will be returned otherwise <em>pDefault</em> is returned. <br>
 <em>pDefault</em> is a string to be returned if the key is not found in the file.
<p>
 <strong>Note</strong> that the category and key are not case sensitive.
<p>
Any text that begins with "->" is ignored to the end of line. This is how you add comments to the source file.
<p>
If the associated data can be converted to a Euphoria atom it will be, otherwise it
will be returned as a text string. With the exception that the strings "yes", "true", "on"
will be returned as the integer 1 (one), and the strings "no", "false", "off" will be returned
as the integer 0 (zero). If you actually need any of these strings to be returned verbatim
then enclose them in quotes in the file.
<p>
If the associated text contains "\n" or "\t" these are replaced with 10 (newline) and 9 (tab) respectively.
<p>
The associated data can span multiple lines. This done by simply having the continuation lines
begin in column 2 or greater.
<p>
 Example: <br>
Assume we have an options file, App.Ini, containing the following lines ...
<pre>
[COMMS]
Baud=9600
Stop=1
Bits=7
Parity=Odd
AutoConnect=yes
ACKResponse="yes"
Welcome= "Application V1.0\n"
         "Welcome to my application.\n"
         "(c) 2004 HardMacro"
<p>
[COLOR]
Background = White
Text = Black
Highlight = Blue
Selection = Pink
<p>
[LIMITS]
Files = 10
DBSize = 1024 -> MB
</pre>
<p>
then we could call this routine ...
<p>
<pre>
      object lRes
      lRes = getOpt("App.Ini", "color", "text", "Gray") -- Returns "Black"
      lRes = getOpt("App.Ini", "comms", "autoconnect", "no") -- Returns 1
      lRes = getOpt("App.Ini", "comms", "ACKResponse", "none") -- Returns "yes"
      lRes = getOpt("App.Ini", "comms", "Parity", "even") -- Returns "Odd"
      lRes = getOpt("App.Ini", "comms", "CRC", "yes") -- Returns "yes"
      lRes = getOpt("App.Ini", "User", "ID", -1) -- Returns -1
      lRes = getOpt("App.Ini", "limits", "files", -1) -- Returns 10
      lRes = getOpt("App.Ini", "limits", "connections", 4) -- Returns 4
      lRes = getOpt("App.Ini", "limits", "DBSize", 16) -- Returns 1024
      lRes = getOpt("App.Ini", "comms", "welcome", "") -- Returns ...
Application V1.0
Welcome to my application.
(c) 2004 HardMacro
</pre>
<p>See Also: 
<a href="#BEEP">Beep</a>,
<a href="#FORMATMSG">FormatMsg</a>,
<a href="#GETRANDINT">getRandInt</a>,
<a href="#MAKESTANDARDNAME">makeStandardName</a>,
<a href="#SETCONTAINER">setContainer</a>,
<a href="#SETUSERLANGUAGE">setUserLanguage</a>,
<a href="#USETEXT">UseText</a>,
<a href="#W32MAXWIDTH">w32MaxWidth</a>,
<a href="#W32MINSEQUENCESIZE">w32MinSequenceSize</a>,
<a href="#W32RAND32">w32rand32</a>,
<a href="#W32TOSTRING">w32ToString</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETRANDINT">[<i>func</i>]<br>getRandInt</a> (atom pMin, atom pMax)</h2>
<h3>Gets a random number.</h3>
<h3>Returns:  ATOM: A random number from <em>Min</em> and <em>Max</em> inclusive.</h3>
Category: <a href="#MISCELLANEOU">Miscellaneous</a><br>
<p><p>This uses the cryptographic routines built into Windows. It gathers entropy from
various sources in between calls and thus you cannot seed this generator
to produce a known stream of numbers.
<p>
 <em>pMin</em> and pMax are limited to 32-bit integer values.
<p>
Example:
<pre>
      integer guess
      Get a random number between 4 and 19.
      guess = getRandInt(4, 19)
</pre>
<p>See Also: 
<a href="#BEEP">Beep</a>,
<a href="#FORMATMSG">FormatMsg</a>,
<a href="#GETOPT">getOpt</a>,
<a href="#MAKESTANDARDNAME">makeStandardName</a>,
<a href="#SETCONTAINER">setContainer</a>,
<a href="#SETUSERLANGUAGE">setUserLanguage</a>,
<a href="#USETEXT">UseText</a>,
<a href="#W32MAXWIDTH">w32MaxWidth</a>,
<a href="#W32MINSEQUENCESIZE">w32MinSequenceSize</a>,
<a href="#W32RAND32">w32rand32</a>,
<a href="#W32TOSTRING">w32ToString</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="MAKESTANDARDNAME">[<i>func</i>]<br>makeStandardName</a> (sequence Name)</h2>
<h3>Transforms a string into a standardized format suitable for naming things.</h3>
<h3>Returns: SEQUENCE: A Standard Name format</h3>
Category: <a href="#MISCELLANEOU">Miscellaneous</a><br>
<p><p> <em>Name</em> is any string. It is converted to a standard form by removing any characters
that are not alphanumeric, except that the first character can only be alphabetic or
the underscore character.
<p>
Example:
<pre>
      sequence lName
      lName = makeStandardName("Customer Dialog #1")
      -- This should return "CustomerDialog1"
</pre>
<p>See Also: 
<a href="#BEEP">Beep</a>,
<a href="#FORMATMSG">FormatMsg</a>,
<a href="#GETOPT">getOpt</a>,
<a href="#GETRANDINT">getRandInt</a>,
<a href="#SETCONTAINER">setContainer</a>,
<a href="#SETUSERLANGUAGE">setUserLanguage</a>,
<a href="#USETEXT">UseText</a>,
<a href="#W32MAXWIDTH">w32MaxWidth</a>,
<a href="#W32MINSEQUENCESIZE">w32MinSequenceSize</a>,
<a href="#W32RAND32">w32rand32</a>,
<a href="#W32TOSTRING">w32ToString</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETCONTAINER">[<i>func</i>]<br>setContainer</a> (object pNew)</h2>
<h3> Defines the message file that is used by <a href="MISCELLANEOU.htm#USETEXT">Usetext</a></h3>
<h3>Returns: SEQUENCE: The previous setting.</h3>
Category: <a href="#MISCELLANEOU">Miscellaneous</a><br>
<p><p>Initially the file name is set to "msgs.ini". You would use this if the messages file containing
the text has a different name or is on a different path.
<p>
 If <em>pNew</em> is a sequence, it is the name and path of the file that will be searched by <a href="MISCELLANEOU.htm#USETEXT">UseText</a>.
Otherwise, the current file name and path will be returned.
<p>
Example:
<pre>
  -- Get current value
  sequence lCurrent
  lCurrent = setContainer( 0 ) -- Any non-sequence parameter value will do.
<p>
  sequence lOld
  lOld = setContainer( "Application\\Data\\Message.Text" )
</pre>
<p>See Also: 
<a href="#BEEP">Beep</a>,
<a href="#FORMATMSG">FormatMsg</a>,
<a href="#GETOPT">getOpt</a>,
<a href="#GETRANDINT">getRandInt</a>,
<a href="#MAKESTANDARDNAME">makeStandardName</a>,
<a href="#SETUSERLANGUAGE">setUserLanguage</a>,
<a href="#USETEXT">UseText</a>,
<a href="#W32MAXWIDTH">w32MaxWidth</a>,
<a href="#W32MINSEQUENCESIZE">w32MinSequenceSize</a>,
<a href="#W32RAND32">w32rand32</a>,
<a href="#W32TOSTRING">w32ToString</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETUSERLANGUAGE">[<i>func</i>]<br>setUserLanguage</a> (object pNew)</h2>
<h3> Defines or returns the language category that is used by <a href="MISCELLANEOU.htm#USETEXT">UseText</a></h3>
<h3>Returns: SEQUENCE: The previous setting.</h3>
Category: <a href="#MISCELLANEOU">Miscellaneous</a><br>
<p><p>Initially the language is set to "english". You would use this if the messages file contained
other language catgories.
<p>
 If <em>pNew</em> is a sequence, it is the category that will be searched by <a href="MISCELLANEOU.htm#USETEXT">UseText</a> in the messages file.
Otherwise, the current language string will be returned.
<p>
Example:
<pre>
  -- Get current setting
  sequence lCurrent
  lCurrent = setUserLanguage( 0 ) -- Any non-sequence parameter value will do.
<p>
  sequence lOld
  lOld = setUserLanguage( "thai" )
  -- Note that the category can be anything.
  lOld = setUserLanguage( "geek jargon" )
</pre>
<p>See Also: 
<a href="#BEEP">Beep</a>,
<a href="#FORMATMSG">FormatMsg</a>,
<a href="#GETOPT">getOpt</a>,
<a href="#GETRANDINT">getRandInt</a>,
<a href="#MAKESTANDARDNAME">makeStandardName</a>,
<a href="#SETCONTAINER">setContainer</a>,
<a href="#USETEXT">UseText</a>,
<a href="#W32MAXWIDTH">w32MaxWidth</a>,
<a href="#W32MINSEQUENCESIZE">w32MinSequenceSize</a>,
<a href="#W32RAND32">w32rand32</a>,
<a href="#W32TOSTRING">w32ToString</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="USETEXT">[<i>func</i>]<br>UseText</a> (object pTextCode, sequence pDefault)</h2>
<h3> Fetches the text associated with <em>pTextCode</em></h3>
<h3>Returns: SEQUENCE: The text.</h3>
Category: <a href="#MISCELLANEOU">Miscellaneous</a><br>
<p><p> This searches the current messages file (see <a href="MISCELLANEOU.htm#SETCONTAINER">setContainer</a> ) for the text code
 in the current language category (see <a href="MISCELLANEOU.htm#SETUSERLANGUAGE">setUserLanguage</a> ) and when found returns the
associated text string.
<p>
 If no associated text could be found and no default was supplied, it returns the value of <em>pTextCode</em> enclosed
 with <em>MSG</em>[ and <em></em>].
<p>
 Example: <br>
Assume you have the following messages file ...
<pre>
[english]
0 = Okay
1 = File not found
2 = Record not found
3 = Record already exists
9 = Internal error.
UM = Unit of Measure
KG = Kilogram
</pre>
<p>
Then we can call this function thus ...
<pre>
      sequence lText
      lText = UseText(0, "") -- returns "Okay"
      lText = UseText(9, "") -- returns "Internal error."
      lText = UseText("KG", "kilo") -- returns "Kilogram"
      lText = UseText("KM", "") -- returns "MSG[KM]"
</pre>
<p>See Also: 
<a href="#BEEP">Beep</a>,
<a href="#FORMATMSG">FormatMsg</a>,
<a href="#GETOPT">getOpt</a>,
<a href="#GETRANDINT">getRandInt</a>,
<a href="#MAKESTANDARDNAME">makeStandardName</a>,
<a href="#SETCONTAINER">setContainer</a>,
<a href="#SETUSERLANGUAGE">setUserLanguage</a>,
<a href="#W32MAXWIDTH">w32MaxWidth</a>,
<a href="#W32MINSEQUENCESIZE">w32MinSequenceSize</a>,
<a href="#W32RAND32">w32rand32</a>,
<a href="#W32TOSTRING">w32ToString</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="W32MAXWIDTH">[<i>func</i>]<br>w32MaxWidth</a> (object pData)</h2>
<h3> Computes the maximum width of elements of <em>pData</em>.</h3>
<h3>Returns: The maximum width.</h3>
Category: <a href="#MISCELLANEOU">Miscellaneous</a><br>
<p><p>The width of a string is its length. The width of an atom is the length of its
string representation using the %15.15g format specifier.
<p>See Also: 
<a href="#BEEP">Beep</a>,
<a href="#FORMATMSG">FormatMsg</a>,
<a href="#GETOPT">getOpt</a>,
<a href="#GETRANDINT">getRandInt</a>,
<a href="#MAKESTANDARDNAME">makeStandardName</a>,
<a href="#SETCONTAINER">setContainer</a>,
<a href="#SETUSERLANGUAGE">setUserLanguage</a>,
<a href="#USETEXT">UseText</a>,
<a href="#W32MINSEQUENCESIZE">w32MinSequenceSize</a>,
<a href="#W32RAND32">w32rand32</a>,
<a href="#W32TOSTRING">w32ToString</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="W32MINSEQUENCESIZE">[<i>func</i>]<br>w32MinSequenceSize</a> (sequence pList, integer pMinSize, object pNewData)</h2>
<h3> Pads <em>pList</em> to the right until its length reaches <em>pMinSize</em> using <em>pNewData</em> as filler.</h3>
<h3>Returns:  The padded sequence, unchanged if its size was not less than <em>pMinSize</em> on input.</h3>
Category: <a href="#MISCELLANEOU">Miscellaneous</a><br>
<p><p><p>See Also: 
<a href="#BEEP">Beep</a>,
<a href="#FORMATMSG">FormatMsg</a>,
<a href="#GETOPT">getOpt</a>,
<a href="#GETRANDINT">getRandInt</a>,
<a href="#MAKESTANDARDNAME">makeStandardName</a>,
<a href="#SETCONTAINER">setContainer</a>,
<a href="#SETUSERLANGUAGE">setUserLanguage</a>,
<a href="#USETEXT">UseText</a>,
<a href="#W32MAXWIDTH">w32MaxWidth</a>,
<a href="#W32RAND32">w32rand32</a>,
<a href="#W32TOSTRING">w32ToString</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="W32RAND32">[<i>func</i>]<br>w32rand32</a> (atom N)</h2>
<h3>Returns:  A random integer between 1 and <em>N</em>. N may be any atom representing a 32-bit integer.</h3>
Category: <a href="#MISCELLANEOU">Miscellaneous</a><br>
<p><p><p>See Also: 
<a href="#BEEP">Beep</a>,
<a href="#FORMATMSG">FormatMsg</a>,
<a href="#GETOPT">getOpt</a>,
<a href="#GETRANDINT">getRandInt</a>,
<a href="#MAKESTANDARDNAME">makeStandardName</a>,
<a href="#SETCONTAINER">setContainer</a>,
<a href="#SETUSERLANGUAGE">setUserLanguage</a>,
<a href="#USETEXT">UseText</a>,
<a href="#W32MAXWIDTH">w32MaxWidth</a>,
<a href="#W32MINSEQUENCESIZE">w32MinSequenceSize</a>,
<a href="#W32TOSTRING">w32ToString</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="W32TOSTRING">[<i>func</i>]<br>w32ToString</a> (object pData)</h2>
<h3> Assembles a sequence from the substrings in <em>pData</em>, separated by commas.</h3>
<h3>Returns:  A sequence concatenating all substrings of <em>pdata</em>, with a comma as separator.</h3>
Category: <a href="#MISCELLANEOU">Miscellaneous</a><br>
<p><p>The returned sequence is enclosed between '(' and ')'.
<p>See Also: 
<a href="#BEEP">Beep</a>,
<a href="#FORMATMSG">FormatMsg</a>,
<a href="#GETOPT">getOpt</a>,
<a href="#GETRANDINT">getRandInt</a>,
<a href="#MAKESTANDARDNAME">makeStandardName</a>,
<a href="#SETCONTAINER">setContainer</a>,
<a href="#SETUSERLANGUAGE">setUserLanguage</a>,
<a href="#USETEXT">UseText</a>,
<a href="#W32MAXWIDTH">w32MaxWidth</a>,
<a href="#W32MINSEQUENCESIZE">w32MinSequenceSize</a>,
<a href="#W32RAND32">w32rand32</a>
<hr>
