<html>
<head>
<!-- Generated by MAKEDOC v1.1, (c) 2000,2003 by David Cuny, Derek Parnell, Matt Lewis -->
<!-- on 2009/07/23 at 00h20m32 -->
<style>h4 {text-align: right}</style>
<title>Documentation for Win32lib v0.70.18</title>
</head>
<body>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h1><a name="LISTVIEW_CONTROL">ListView Control</a></h1>
<p><h3> These routines deal with the <a href="CONTROL.htm#LISTVIEW">ListView</a> common control. <br>
</h3><br>
It is important to know that each item in a list view has a unique ID
number. In other words, no two listview items have the same ID value,
regardless of which listview it they are in. The item ID is not the same
as its index value. The index value is where in a list view the item is
positioned. The ID is used as a way to identify an item without referring
 to its column values or position. When you add an item using <a href="LISTVIEW_CONTROL.htm#ADDLVITEM">addLVItem</a>,
 you get the item's ID returned. <br>
 The following routines support <a href="CONTROL.htm#LISTVIEW">ListView</a> as well as other controls:
 <li> <a href="LIST_CONTROL.htm#DELETEITEM">deleteItem</a>
 <li> <a href="LIST_CONTROL.htm#ERASEITEM">eraseItems</a>
 <li> <a href="LIST_CONTROL.htm#GETINDEX">getIndex</a>
 <li> <a href="LIST_CONTROL.htm#GETITEM">getItem</a>
 <li> <a href="VALUE.htm#GETDATA">getData</a>
 <li> <a href="LIST_CONTROL.htm#FINDITEM">findItem</a>
<p>
 The following routines are specific to the <strong>ListView</strong> control.
<p>
 <li> <a href="LISTVIEW_CONTROL.htm#ADDLVITEM">addLVItem</a>
 <li> <a href="LISTVIEW_CONTROL.htm#GETLVALLCHECKED">getLVAllChecked</a>
 <li> <a href="LISTVIEW_CONTROL.htm#GETLVALLTEXT">getLVAllText</a>
 <li> <a href="LISTVIEW_CONTROL.htm#GETLVCHECKED">getLVChecked</a>
 <li> <a href="LISTVIEW_CONTROL.htm#GETLVCOUNT">getLVCount</a>
 <li> <a href="LISTVIEW_CONTROL.htm#GETLVITEM">getLVItem</a>
 <li> <a href="LISTVIEW_CONTROL.htm#GETLVITEMLPARAM">getLVItemlParam</a>
 <li> <a href="LISTVIEW_CONTROL.htm#GETLVITEMTEXT">getLVItemText</a>
 <li> <a href="LISTVIEW_CONTROL.htm#GETLVSELECTED">getLVSelected</a>
 <li> <a href="LISTVIEW_CONTROL.htm#GETLVSELECTEDCOUNT">getLVSelectedCount</a>
 <li> <a href="LISTVIEW_CONTROL.htm#GETLVSELECTEDTEXT">getLVSelectedText</a>
 <li> <a href="LISTVIEW_CONTROL.htm#HITTESTLV">hitTestLV</a>
 <li> <a href="LISTVIEW_CONTROL.htm#INSERTLVCOLUMN">insertLVColumn</a>
 <li> <a href="LISTVIEW_CONTROL.htm#INSERTLVITEM">insertLVItem</a>
 <li> <a href="LISTVIEW_CONTROL.htm#SETLVATTR">setLVAttr</a>
 <li> <a href="LISTVIEW_CONTROL.htm#SETLVCHECKED">setLVChecked</a>
 <li> <a href="LISTVIEW_CONTROL.htm#SETLVINSERT">setLVInsert</a>
 <li> <a href="LISTVIEW_CONTROL.htm#SETLVIMAGE">setLVImage</a>
 <li> <a href="LISTVIEW_CONTROL.htm#SETLVITEM">setLVItem</a>
 <li> <a href="LISTVIEW_CONTROL.htm#SETLVITEMLPARAM">setLVItemlParam</a>
 <li> <a href="LISTVIEW_CONTROL.htm#SETLVITEMTEXT">setLVItemText</a>
 <li> <a href="LISTVIEW_CONTROL.htm#SETLVSTYLE">setLVStyle</a>
 <li> <a href="LISTVIEW_CONTROL.htm#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>

</p>
<li><a href="#ADDLVITEM"><i>func</i> addLVItem</a>( object id, atom iIcon, sequence text ) &nbsp;&nbsp; Add an item to a <a href="CONTROL.htm#LISTVIEW">ListView</a>
<li><a href="#DELETELVCOLUMN"><i>proc</i> deleteLVColumn</a>(id,index,mask,fmt,cx,text, ColumnNumber ) &nbsp;&nbsp;Removes a column from a listview control.
<li><a href="#GETCOLUMNHEADING"><i>proc</i> getColumnHeadings</a>( integer id ) &nbsp;&nbsp;Gets a list of headings for each column in a list view.
<li><a href="#GETLVALLCHECKED"><i>func</i> getLVAllChecked</a>( integer id) &nbsp;&nbsp;Returns a list of the indexes of     those rows that are Checked.
<li><a href="#GETLVALLTEXT"><i>func</i> getLVAllText</a>( integer id, integer row ) &nbsp;&nbsp;Gets the text associated with every column in a listview row.
<li><a href="#GETLVCHECKED"><i>func</i> getLVChecked</a>( integer id, integer index ) &nbsp;&nbsp;Gets whether or not an row has its checkbox ticked.
<li><a href="#GETLVCOUNT"><i>func</i> getLVCount</a>( integer id ) &nbsp;&nbsp;Gets the number of rows in a list view.
<li><a href="#GETLVITEM"><i>func</i> getLVItem</a>( integer id, atom LV_ITEM) &nbsp;&nbsp;Gets various attributes of a listview item.
<li><a href="#GETLVITEMLPARAM"><i>func</i> getLVItemlParam</a>( integer id, integer iItem ) &nbsp;&nbsp;Gets the user-defined data for this specific row in the list.
<li><a href="#GETLVITEMTEXT"><i>func</i> getLVItemText</a>( integer id, integer item, object column) &nbsp;&nbsp;Gets the text associated with a listview item.
<li><a href="#GETLVSELECTED"><i>func</i> getLVSelected</a>( object id ) &nbsp;&nbsp;get a list of the selected items' indexes
<li><a href="#GETLVSELECTEDCOUNT"><i>func</i> getLVSelectedCount</a>( integer id ) &nbsp;&nbsp;Gets the number of selected items in a list view.
<li><a href="#GETLVSELECTEDTEXT"><i>func</i> getLVSelectedText</a>( integer id ) &nbsp;&nbsp;Gets the column-1 text for each selected item in the listview.
<li><a href="#HITTESTLV"><i>func</i> hitTestLV</a>( id ) &nbsp;&nbsp; Check to see if mouse is over a <a href="CONTROL.htm#LISTVIEW">ListView</a> item
<li><a href="#INSERTLVCOLUMN"><i>proc</i> insertLVColumn</a>(id,index,mask,fmt,cx,text, ColumnNumber ) &nbsp;&nbsp;Inserts a new column into a listview control.
<li><a href="#INSERTLVITEM"><i>func</i> insertLVItem</a>(id,mask,row,column,state,stateMask,text,image,lparam) &nbsp;&nbsp; Low-Level version of <a href="LISTVIEW_CONTROL.htm#ADDLVITEM">addLVItem</a>.
<li><a href="#LOADLVINFO"><i>proc</i> loadLVInfo</a>(integer id, sequence pNewData) &nbsp;&nbsp;Used to bulk load data into a list view control
<li><a href="#SETCOLUMN"><i>proc</i> setColumn</a>( integer id, integer column, sequence text ) &nbsp;&nbsp;Changes the column header text, or width, or alignment.
<li><a href="#SETCOLUMNHEADING"><i>proc</i> setColumnHeadings</a>( integer id, sequence text ) &nbsp;&nbsp; Sets the heading text for the columns in a <a href="CONTROL.htm#LISTVIEW">ListView</a> Control.
<li><a href="#SETLVATTR"><i>func</i> setLVAttr</a>(integer id, sequence pNewData) &nbsp;&nbsp;Set (some) attributes of a ListView control
<li><a href="#SETLVCHECKED"><i>proc</i> setLVChecked</a>( integer id, integer Row, atom checked ) &nbsp;&nbsp; Sets the checked state for a <a href="CONTROL.htm#LISTVIEW">ListView</a> Item
<li><a href="#SETLVIMAGE"><i>func</i> setLVImage</a>( integer id, atom pInfo) &nbsp;&nbsp;Possibly sets the new background image of the ListView, and returns previous state.
<li><a href="#SETLVINSERT"><i>func</i> setLVInsert</a>(object pFlag ) &nbsp;&nbsp;Possibly sets the default position for ListView inserts.
<li><a href="#SETLVITEM"><i>proc</i> setLVItem</a>(id, mask, Row, Column, state, stateMask, text, image, lparam) &nbsp;&nbsp;Enables you to set a number of the properties of a ListView item in one call.
<li><a href="#SETLVITEMEX"><i>proc</i> setLVItemEx</a>(id, mask, Row, Column, state, stateMask, text, image, lparam,base) &nbsp;&nbsp;Enables you to set a number of the properties of a ListView item in one call,
<li><a href="#SETLVITEMLPARAM"><i>proc</i> setLVItemlParam</a>( integer id, integer pRow, atom lParam ) &nbsp;&nbsp;Sets the user-defined data for this specific row in the list.
<li><a href="#SETLVITEMTEXT"><i>proc</i> setLVItemText</a>(integer LV, integer position, integer subitem, object text) &nbsp;&nbsp;Sets the text of a List View item or subitem.
<li><a href="#SETLVSTYLE"><i>proc</i> setLVStyle</a>(integer ID, object StyleFlags) &nbsp;&nbsp;Sets the extended style flags on a listview
<li><a href="#STRUCT_LVCOLUMN"><i>func</i> struct_LVCOLUMN</a>(atom mask, atom fmt, atom cx, object text, object Column ) &nbsp;&nbsp;Allocates RAM for a LVCOLUMN structure and initialises it.
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="ADDLVITEM">[<i>func</i>]<br>addLVItem</a> ( object id, atom iIcon, sequence text )</h2>
<h3> Add an item to a <a href="CONTROL.htm#LISTVIEW">ListView</a></h3>
<h3>Returns: The new item's ID.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> <em>id</em>: This is either the id of <a href="CONTROL.htm#LISTVIEW">ListView</a> or a two-element sequence that
specifies the ListView id and the position in the list to insert the new
 item. <strong>1</strong> is the first position, <strong>2</strong> is the second position, etc... and
 <em></em>-1 is the last position. <br>
 <em>iIcon</em>: index of image from <a href="IMAGE_LIST.htm#ADDICON">addIcon</a>, <a href="IMAGE_LIST.htm#ADDEUBMP">addEuBmp</a>, <a href="IMAGE_LIST.htm#ADDXPM">addXpm</a>, or <a href="IMAGE_LIST.htm#ADDDIB">addDIB</a> <br>
 <em>text</em>: sequence of strings or numbers to be displayed in listview columns. The
 number of columns is set by the number of strings in this parameter. <br>
<p>
Note: Each item placed into a listview is given a unique ID. The ID is unique
for the application, not just the ListView the item is in. Also, the ID is
not the same as the position of the item in the ListView.
<p>
Example:
<pre>
        sequence idx idx = {}
        setColumnHeadings(myLV, {"Given Name","Family Name","Playing Position", "Number"})
        idx &= addLVItem(myLV, iconCaptain, {"Brett","Ratten", "Center", 7})
        idx &= addLVItem(myLV, iconPlayer, {"Scott","Camporeale", "Wing", 16})
        idx &= addLVItem(myLV, iconPlayer, {"Jim","Plunkett", "Rover", 44})
        -- Insert an item at position 2.
        idx &= addLVItem({myLV,2}, iconPlayer, {"Andrew","McKay", "Back Pocket", 5})
</pre>
<p>See Also: 
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="DELETELVCOLUMN">[<i>proc</i>]<br>deleteLVColumn</a> (id,index,mask,fmt,cx,text, ColumnNumber )</h2>
<h3>Removes a column from a listview control.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p><p>
Example:
<pre>
      -- Delete the third column
      deleteLVColumn( myListView, 3 )
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETCOLUMNHEADING">[<i>proc</i>]<br>getColumnHeadings</a> ( integer id )</h2>
<h3>Gets a list of headings for each column in a list view.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p>The headings are returned in the same left-to-right order as they are
currently displayed. Note that, because the user can sometimes change the
order of the columns, the 'column number' may not always be the same
as the order that they appear in.
<p>
The returned sequence contains one entry per heading. Each entry contains
two-elements: the first is the true column number and the second is
the heading text. The true column number can be used to get the
values from the column. See example below ...
<p>
Example:
<pre>
      -- Output the columns in the right order
      lheads = getColumnHeadings(myListView)
      puts(fh, '\n')
      for i = 1 to length(lheads) do
          printf(fh, "%-25s", {lheads[i][2]})
      end for
      printf(fh, "\n%s\n", {repeat('-', 75)})
      for i = 1 to getLVCount(myListView) do
          for j = 1 to length(lheads) do
              lData = getLVItemText(myListView, i, lheads[j][1])
              printf(fh, "%-25s", lData)
          end for
          puts(fh, '\n')
      end for
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETLVALLCHECKED">[<i>func</i>]<br>getLVAllChecked</a> ( integer id)</h2>
<h3>Returns a list of the indexes of     those rows that are Checked.</h3>
<h3>Returns: SEQUENCE: A list of rows.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p><p>
Example:
<pre>
      sequence items
      items = getLVAllChecked(myLV)
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETLVALLTEXT">[<i>func</i>]<br>getLVAllText</a> ( integer id, integer row )</h2>
<h3>Gets the text associated with every column in a listview row.</h3>
<h3>Returns: Sequence: A sequence of text strings.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> <em>id</em> is the ListView control, <br>
 <em>row</em> is the list view row in question, <br>
<p>
Example:
<pre>
       sequence theText
       -- Get the text from row 1.
       theText = getLVAllText(myLV, 1 )
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETLVCHECKED">[<i>func</i>]<br>getLVChecked</a> ( integer id, integer index )</h2>
<h3>Gets whether or not an row has its checkbox ticked.</h3>
<h3>Returns: INTEGER: w32False if not checked, otherwise w32True.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p><p>
Example:
<pre>
      integer cnt
      -- See if row #2 is checked.
      cnt = getLVChecked(myLV, 2)
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETLVCOUNT">[<i>func</i>]<br>getLVCount</a> ( integer id )</h2>
<h3>Gets the number of rows in a list view.</h3>
<h3>Returns: INTEGER: The count of rows.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p><p>
Example:
<pre>
      integer cnt
      cnt = getLVCount(myLV)
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETLVITEM">[<i>func</i>]<br>getLVItem</a> ( integer id, atom LV_ITEM)</h2>
<h3>Gets various attributes of a listview item.</h3>
<h3>Returns: ATOM: 0 if routine was successful.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> <em>LV_ITEM</em> is the address of a LVITEM structure that you have to correctly
fill out before you call this routine.
Note that, on return, the lParam member of the structure will not hold the item information
you supplied, but its unique id instead. To access the item information, use
 <a href="LISTVIEW_CONTROL.htm#GETLVITEMLPARAM">getLVItemlParam</a>() instead.
<p>
Example:
<pre>
     atom lOK
     atom lvitem
     lvitem = w32acquire_mem(0, SIZEOF_LVITEM)
     w32store(lvitem, LVITEM_iItem, 1)
     w32store(lvitem, LVITEM_mask, LVIF_TEXT)
     lOK = getLVItem(myLV, lvitem)
     . . .
     w32release_mem(lvitem)
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETLVITEMLPARAM">[<i>func</i>]<br>getLVItemlParam</a> ( integer id, integer iItem )</h2>
<h3>Gets the user-defined data for this specific row in the list.</h3>
<h3>Returns:  ATOM: The user-defined data associated with this <em>iItem</em>.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> This data is set by <a href="LISTVIEW_CONTROL.htm#SETLVITEMLPARAM">setLVItemlParam</a> and can be any Euphoria object.
<p>
Example
<pre>
       atom lVal
       -- Get the data for the second row in the list.
       lVal = getLVItemlParam(myLV, 2)
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETLVITEMTEXT">[<i>func</i>]<br>getLVItemText</a> ( integer id, integer item, object column)</h2>
<h3>Gets the text associated with a listview item.</h3>
<h3>Returns: Sequence: The text for an item.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> <em>id</em> is the ListView control, <br>
 <em>row</em> is the list view row in question, <br>
 <em>column</em> is either the number of the column whose text you want,
or -1 if you want the text from all columns, in which case a sequence of
strings is returned, or a sequence of column numbers.
<p>
Example:
<pre>
       sequence theText
       -- Get the text from column 1 in row 2.
       theText = getLVItemText(myLV, 2, 1)
       -- Get the text from columns 3 and 2 in row 1.
       theText = getLVItemText(myLV, 1, {3,2} )
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETLVSELECTED">[<i>func</i>]<br>getLVSelected</a> ( object id )</h2>
<h3>get a list of the selected items' indexes</h3>
<h3>Returns: SEQUENCE: A list of item indexes.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p>This can return either a simple list of item index values or
a list of 2-element sequences where the first element is
the index of the selected item and the second elements is
the id of the selected item.
<p>
Remember that each item in a list view has a unique item id.
The index is the item's current position within the listview.
<p>
 To return just a list of item indexes, <em>id</em> is the ListView control id. <br>
 To return a list of {index, item id} sequences, then <em>id</em> must be
 a sequence in the form {LVid, style}. <em>LVid</em> is the listview's
 control id and <em>style</em> is either <strong>1</strong> for the sequence list
 return value style, or <strong>0</strong> for the simple list return value style.
<p>
Example:
<pre>
          sequence indexes
          -- Get a list of selected items' id.
          idxs = getLVSelected( myListView)
<p>
          -- Get a list of selected items AND their indexes.
          idxs = getLVSelected( {myListView, 1} )
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETLVSELECTEDCOUNT">[<i>func</i>]<br>getLVSelectedCount</a> ( integer id )</h2>
<h3>Gets the number of selected items in a list view.</h3>
<h3>Returns: INTEGER: The count of selected items.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p><p>
Example:
<pre>
      integer cnt
      cnt = getLVSelectedCount(myLV)
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETLVSELECTEDTEXT">[<i>func</i>]<br>getLVSelectedText</a> ( integer id )</h2>
<h3>Gets the column-1 text for each selected item in the listview.</h3>
<h3>Returns: SEQUENCE: Each element returned is a text sequence.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p>Note that an empty sequence returned means that there is no selected
items.
<p>
Example:
<pre>
      sequence strings
      strings = getLVSelectedText(myListView)
      for i = 1 to length(strings) do
          puts(1, strings[i] & '\n')
      end for
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="HITTESTLV">[<i>func</i>]<br>hitTestLV</a> ( id )</h2>
<h3> Check to see if mouse is over a <a href="CONTROL.htm#LISTVIEW">ListView</a> item</h3>
<h3>Returns:  {item,subitem} pair of <a href="CONTROL.htm#LISTVIEW">ListView</a> item under mouse, or {}, if none</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p><p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="INSERTLVCOLUMN">[<i>proc</i>]<br>insertLVColumn</a> (id,index,mask,fmt,cx,text, ColumnNumber )</h2>
<h3>Inserts a new column into a listview control.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> See the description of the parameters in the documentation for <a href="LISTVIEW_CONTROL.htm#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>().
<p>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="INSERTLVITEM">[<i>func</i>]<br>insertLVItem</a> (id,mask,row,column,state,stateMask,text,image,lparam)</h2>
<h3> Low-Level version of <a href="LISTVIEW_CONTROL.htm#ADDLVITEM">addLVItem</a>.</h3>
<h3>Returns: SEQUENCE: {index, itemid}</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p><p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="LOADLVINFO">[<i>proc</i>]<br>loadLVInfo</a> (integer id, sequence pNewData)</h2>
<h3>Used to bulk load data into a list view control</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> <em>id</em> is the ID of the <a href="CONTROL.htm#LISTVIEW">ListView</a> control <br>
 <em>pNewData</em> is a list of row data and optional image ids.
Each element is either a list of column data or an image id
 as returned from <a href="IMAGE_LIST.htm#ADDICON">addIcon</a>(). An image id applies to all
the row data that follows until the next image id.
<p>
Example:
<pre>
      sequence theData
      integer iconMale, iconFemale
      iconMale = addIcon(loadBitmapFromFile("male.ico"))
      iconFemale = addIcon(loadBitmapFromFile("female.ico"))
      theData = {}
      theData &= iconMale
      theData = append(theData, {"George", 95.4, "Judo"})
      theData = append(theData, {"Harry", 97.2, "Karate"})
      theData &= iconFemale
      theData = append(theData, {"Wendy", 65.1, "Kendo"})
      theData = append(theData, {"Jill", 75.8, "Ice Hockey"})
      theData &= iconMale
      theData = append(theData, {"Horatio", 105.1, "Chess"})
      theData = append(theData, {"Felix", 87.0, "Butterflies"})
      loadLVInfo(myLV, theData)
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETCOLUMN">[<i>proc</i>]<br>setColumn</a> ( integer id, integer column, sequence text )</h2>
<h3>Changes the column header text, or width, or alignment.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> See <a href="LISTVIEW_CONTROL.htm#STRUCT_LVCOLUMN">struct_LVCOLUMN</a> for a description of what format <em>text</em> can take.
<p>
Example:
<pre>
     -- Set the width of the third column to 230
     setColumn(myListView, 3, {"",230,-1} )
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETCOLUMNHEADING">[<i>proc</i>]<br>setColumnHeadings</a> ( integer id, sequence text )</h2>
<h3> Sets the heading text for the columns in a <a href="CONTROL.htm#LISTVIEW">ListView</a> Control.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> The <em>text</em> parameter is a sequence list of column formatting options,
one per column. Each column formatting option is either a simple text
heading, or a 3-element sequence: {heading-text, column-width, alignment-code}.
The alignment code is a single character (integer) and can be one of '&lt;',
 '^', or '>' meaning left, center, and right alignment respectively. <br>
When calling this routine, sometimes you might need to leave the current
setting for heading text, width or alignment alone. To leave the text
alone, use an empty string. To leave the width alone, use -1. To leave
the alignment alone, use -1.
<p>
Example:
<pre>
       -- Set the heading text for each column.
       setColumnHeadings(myLV, {"Title","Author","Publisher","When"})
       -- Change the width of the second column
       setColumnHeadings(myLV, { {}, {"",200,-1} })
       -- Another way to change the width of the second column
       setColumn(myLV, 2, { {"",200,-1} })
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETLVATTR">[<i>func</i>]<br>setLVAttr</a> (integer id, sequence pNewData)</h2>
<h3>Set (some) attributes of a ListView control</h3>
<h3>Returns: SEQUENCE: The current attributes.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> <em>id</em> is the ListView's id <br>
 <em>pNewData</em> is a list of two-element sequences. The first
element is the code name for the attribute being changed,
and the second is the new value for it.
<p>
<ul>
 <li> <em>kLVColTypes</em> The data types per column for sorting. <br>
 The data is a sequence, one element per column. <br>
 The values can be one of: <br>
<ul>
 <li> 'i' = Case Insensitive sorting
 <li> 'n' = Numeric Sorting
 <li> 'a' = Case sensitive
 </ul> 
 <li> <em>kLVSortSeq</em> The sorting direction, per column, to use. <br>
 The values for the kLVSortSeq attribute can be: <br>
<ul>
 <li> -2 = swaps between ascending and descending for each column click.
 <li> -1 = descending
 <li>  1 = ascending
 <li>  2 = swaps between descending and ascending for each column click.
 </ul> 
 <li> <em>kLVSortRtn</em> The routine_id, per column, of the user-defined sorting routine.
If any column value is set to -2, then the default routine is used. If set
to -1 then no sorting is done on that column.
<p>
When a user clicks on a column heading on a listview, Win32lib tries to sort
the ListView based on the contents of the row data. You are able to specify
your own sorting method if the built-in ones are not sufficient.
<p>
The user-defined sorting routine is called whenever Windows needs to know which
of two items goes before, goes after, or are equivalent. The exact number of times
that this is called depends on the number of items in the listview, however you can
expect it to be called many times for each sort request.
<p>
 The user-defined routine is passed four parameters: <br>
<pre>
    integer ID    -- The control id of the listview
    integer ItemA -- The row number of one of the items to compare
    integer ItemB -- The row number of the other item to compare
    integer Column-- The column number that was clicked on.
</pre>
<p>
The user-defined routine is also called just before the sorting starts and just
after it finishes. In these cases, ItemA and ItemB are both -1 and the Column
 value is either w32LV_StartSorting or w32LV_EndSorting, respectively. <br>
When called at the start of sorting, your routine is expected to return w32True
if the sort can commence, otherwise the sort request is rejected.
<p>
 <strong>Note</strong> that the cursor is changed to the 'hourglass' shape during the sorting
process.
 </ul> 
<p>
Example:
<pre>
    sequence ov
    -- Indicate that col 1 is case-insensitive, and col 2 is numeric.
    -- Indicate that col 1 swaps directions, and col 2 is always ascending.
    ov = setLVAttr( myLV, {{kLVColTypes, {'i','n'}},
                           {kLVSortSeq, {-2, 1}},
                           {kLVSortRtn, {-2, routine_id("lvsort")}}
                       })
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETLVCHECKED">[<i>proc</i>]<br>setLVChecked</a> ( integer id, integer Row, atom checked )</h2>
<h3> Sets the checked state for a <a href="CONTROL.htm#LISTVIEW">ListView</a> Item</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> <em>id</em> is the win32lib id for the list view. <br>
 <em>Row</em> is the listview item to check/uncheck. <br>
 <em>checked</em> is the checked/unchecked state (&lt;>0=checked,0=unchecked). <br>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETLVIMAGE">[<i>func</i>]<br>setLVImage</a> ( integer id, atom pInfo)</h2>
<h3>Possibly sets the new background image of the ListView, and returns previous state.</h3>
<h3>Returns: (SEQUENCE) {} on failure, a nonempty sequence if previous info could be gathered.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p>pInfo is the address of a structure of type ID_LVBKIMAGE.
If not succesful in getting the information about the background image before the call, the function returns {}.
If pInfo is 0 or w32GetValue, the function does not set the background image.
 If succesful, the function returns {bitmap_handle, flags,url,xOffset,yOffset,return_code}. <em>return_code</em> is w32True if the background image could be set, else w32False.
The other elements are like the parameters for an ID_LVBKIMAGE structure.
Note that the ListView control owns the bitmap whose handle, if any, is in
 <em>bitmap_handle</em>.
<p>
 To obtain a valid <em>pInfo</em>, you have to call <a href="MEMORY_MANAGEMENT.htm#W32TO_MEMORY">w32to_memory</a>(ID_LVBKIMAGE,{pFlags,hBitmap,url,xOffsetPercent,yOffsetPercent}):
 <li> hBitmap is the handle of the background bitmap. <br>
 <li> pFlags is the sum of one or more of the following:
<dl>
 <a name="LVBKIF_SOURCE_NONE"></a><dt>LVBKIF_SOURCE_NONE<dd>
The list-view control has no background image.
 <a name="LVBKIF_SOURCE_HBITMAP"></a><dt>LVBKIF_SOURCE_HBITMAP<dd>
 A background bitmap is supplied via <em>hBitmap</em>. If the message LVM_SETBKIMAGE succeeds, then the list-view takes ownership of the bitmap.
 <a name="LVBKIF_SOURCE_URL"></a><dt>LVBKIF_SOURCE_URL<dd>
 <em>url</em> contains the URL of the background image.
 <a name="LVBKIF_STYLE_NORMAL"></a><dt>LVBKIF_STYLE_NORMAL<dd>
The background image is displayed normally.
 <a name="LVBKIF_STYLE_TILE"></a><dt>LVBKIF_STYLE_TILE<dd>
The background image will be tiled to fill the entire background of the control.
 <a name="LVBKIF_FLAG_TILEOFFSET"></a><dt>LVBKIF_FLAG_TILEOFFSET<dd>
Specify the coordinates of the first tile. This flag is valid only if the LVBKIF_STYLE_TILE flag is also specified. If this flag is not specified, the first tile begins at the upper-left corner of the client area.
 <a name="LVBKIF_TYPE_WATERMARK"></a><dt>LVBKIF_TYPE_WATERMARK<dd>
 A watermark background bitmap is supplied <em>hBitmap</em>. If the LVM_SETBKIMAGE message succeeds, then the list-view control takes ownership of the bitmap.
 <a name="LVBKIF_FLAG_ALPHABLEND"></a><dt>LVBKIF_FLAG_ALPHABLEND<dd>
Only valid when LVBKIF_TYPE_WATERMARK is also specified. This flag indicates the bitmap provided via LVBKIF_TYPE_WATERMARK contains a valid alpha channel.
</dl>
 <li> url is an url where the background image is to be picked at. It is ignored unless the
 LVBKIF_SOURCE_URL style flag is set (set it to "" otherwise)./n 
 <li> xOffset and yOffset are integer percentages which indicate the image placement when the LVBKIF_STYLE_NORMAL flag is present. 0 aligns the image along the left or top edge;
100 aligns the image aong the right or bottom edge; 50 centers the image, and so on.
 Under Windows XP, if using a manifest file, and if the LVBKIF_FLAG_TILEOFFSET is resent, <em>xOffset</em> and <em>yOffset</em> then are the offset <em>in poxels</em> of the first tile.
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETLVINSERT">[<i>func</i>]<br>setLVInsert</a> (object pFlag )</h2>
<h3>Possibly sets the default position for ListView inserts.</h3>
<h3>Returns: The flag setting before this change.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> If <em>pFLag</em> is zero, <a href="LISTVIEW_CONTROL.htm#ADDLVITEM">addLVItem</a>() adds new items to the top of the list.
 If pFlag is <a href="#W32GETVALUE">w32GetValue</a>, the value of the flag is returned without modifying it.
Otherwise, new items are added at the end. The default is to add items to the
top of lists.
 If pFlag is a sequence, it is a pair {id,pFlag}, where the flag has the above meaning and <em>id</em> identifies a ListView. The function then possibly stes, then returns the override flag for this listview.
<p>
Example:
<pre>
     integer lvInsert
     -- Make listviews add to end of lists.
     lvInsert = setLVInsert( 1 )
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETLVITEM">[<i>proc</i>]<br>setLVItem</a> (id, mask, Row, Column, state, stateMask, text, image, lparam)</h2>
<h3>Enables you to set a number of the properties of a ListView item in one call.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p><ul>
 <li> <em>id</em> is the ListView's Id as returned by <a href="DEFINING_CONTROL.htm#CREATEEX">createEx</a>()
 <li> <em>mask</em> determines which what properties are being changed. This is any combination of
 the values <strong>LVIF_TEXT, LVIF_IMAGE, LVIF_PARAM,</strong> and <strong>LVIF_STATE</strong>. For each one of these included,
 the respective parameter <em>text, image, lparam,</em> and <em>state</em> is required.
 <li> Row is the row number in the list
 <li> Column is the column number the parameters affect.
 </ul> 
<p>
Example:
<pre>
      setLVItem (myListView, w32or_all({LVIF_TEXT, LVIF_IMAGE}), 2,1,
                    0, 0, "The Great Gatsby", bookImage, 0)
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETLVITEMEX">[<i>proc</i>]<br>setLVItemEx</a> (id, mask, Row, Column, state, stateMask, text, image, lparam,base)</h2>
<h3>Enables you to set a number of the properties of a ListView item in one call,</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> like <a href="LISTVIEW_CONTROL.htm#SETLVITEM">setLVItem</a>() does.
<ul>
 <li> <em>id</em> is the ListView's Id as returned by <a href="DEFINING_CONTROL.htm#CREATEEX">createEx</a>()
 <li> <em>mask</em> determines which what properties are being changed. This is any combination of
 the values <strong>LVIF_TEXT, LVIF_IMAGE, LVIF_PARAM,</strong> and <strong>LVIF_STATE</strong>. For each one of these included,
 the respective parameter <em>text, image, lparam,</em> and <em>state</em> is required.
 <li> Row is the row number in the list
 <li> Column is the column number the parameters affect.
 <li> base is made of flags or'ed together which specify whether the <em>row</em>, <em>column</em> and <em>image</em> are passed as 1-based (Euphoria-like) or 0-based (C-like) indexes. Available flags are:
<ul>
 <li> ROW_BASE_1 to indicate that the first row is numbered 1;
 <li> ROW_BASE_0 to indicate that the first row is numbered 0;
 <li> COL_BASE_1 to indicate that the first column is numbered 1;
 <li> COL_BASE_0 to indicate that the first column is numbered 0;
 <li> IMG_BASE_1 to indicate that image indexes start at 1;
 <li> IMG_BASE_0 to indicate that image indexes start at 0.
 </ul> 
Note that the _0 constants are 0.
 </ul> 
<p>
Example:
<pre>
      setLVItem (myListView, w32or_all({LVIF_TEXT, LVIF_IMAGE}), 2,1,
                    0, 0, "The Great Gatsby", bookImage, 0)
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETLVITEMLPARAM">[<i>proc</i>]<br>setLVItemlParam</a> ( integer id, integer pRow, atom lParam )</h2>
<h3>Sets the user-defined data for this specific row in the list.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> This data is got by <a href="LISTVIEW_CONTROL.htm#GETLVITEMLPARAM">getLVItemlParam</a> and can be any Euphoria object.
<p>
Example
<pre>
       -- Set the data for the second row in the list.
       setLVItemlParam(myLV, 2, 17)
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETLVITEMTEXT">[<i>proc</i>]<br>setLVItemText</a> (integer LV, integer position, integer subitem, object text)</h2>
<h3>Sets the text of a List View item or subitem.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p><p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVSTYLE">setLVStyle</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETLVSTYLE">[<i>proc</i>]<br>setLVStyle</a> (integer ID, object StyleFlags)</h2>
<h3>Sets the extended style flags on a listview</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p><p>
 <em>StyleFlags</em> can either be an atom containing all then
 flag bits set to a sequence of flag names. The valid names are <a href="..\win32_constants.htm#ListView extended style flags">in this list</a>. \n 
<p>
Example
<pre>
      setLVStyle(myListView, {LVS_EX_FULLROWSELECT,
                              LVS_EX_GRIDLINES,
                              LVS_EX_HEADERDRAGDROP})
</pre>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#STRUCT_LVCOLUMN">struct_LVCOLUMN</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="STRUCT_LVCOLUMN">[<i>func</i>]<br>struct_LVCOLUMN</a> (atom mask, atom fmt, atom cx, object text, object Column )</h2>
<h3>Allocates RAM for a LVCOLUMN structure and initialises it.</h3>
<h3>Returns: ATOM: Address of a LVCOLUMN structure.</h3>
Category: <a href="#LISTVIEW_CONTROL">ListView Control</a><br>
<p><p> <em>text</em> can be a 3-element sequence in the form { headingtext, width, alignment }
 where <em>headingtext</em> is the text for the column heading, <em>width</em> is the
 column width in pixels, and <em>alignment</em> is a code for Left, Center, or
 Right aligned text ('&lt;', '^', '>' respectively). <br>
 In this form, if <em>width</em> or <em>alignment</em> is -1, it is ignored and the
 existing settings for the column are not changed. If <em>headingtext</em> is
"" it is ignored. This means that to blank out a column's heading you
must specify a space character as the heading text value.
<p>
 <em>Column</em> is either ... <br>
 <li> an integer column number for the new column <br>
 <li> a two-element sequence {column#, image#}. This form lets you specify
the column number and the image list id for the column's image.
 <li> a three-element sequence {column#, image#, order}. This form lets you
specify the column number, the image list id for the column's image (zero
for no image, and the order value.
<p>
<p>See Also: 
<a href="#ADDLVITEM">addLVItem</a>,
<a href="#DELETELVCOLUMN">deleteLVColumn</a>,
<a href="#GETCOLUMNHEADING">getColumnHeadings</a>,
<a href="#GETLVALLCHECKED">getLVAllChecked</a>,
<a href="#GETLVALLTEXT">getLVAllText</a>,
<a href="#GETLVCHECKED">getLVChecked</a>,
<a href="#GETLVCOUNT">getLVCount</a>,
<a href="#GETLVITEM">getLVItem</a>,
<a href="#GETLVITEMLPARAM">getLVItemlParam</a>,
<a href="#GETLVITEMTEXT">getLVItemText</a>,
<a href="#GETLVSELECTED">getLVSelected</a>,
<a href="#GETLVSELECTEDCOUNT">getLVSelectedCount</a>,
<a href="#GETLVSELECTEDTEXT">getLVSelectedText</a>,
<a href="#HITTESTLV">hitTestLV</a>,
<a href="#INSERTLVCOLUMN">insertLVColumn</a>,
<a href="#INSERTLVITEM">insertLVItem</a>,
<a href="#LOADLVINFO">loadLVInfo</a>,
<a href="#SETCOLUMN">setColumn</a>,
<a href="#SETCOLUMNHEADING">setColumnHeadings</a>,
<a href="#SETLVATTR">setLVAttr</a>,
<a href="#SETLVCHECKED">setLVChecked</a>,
<a href="#SETLVIMAGE">setLVImage</a>,
<a href="#SETLVINSERT">setLVInsert</a>,
<a href="#SETLVITEM">setLVItem</a>,
<a href="#SETLVITEMEX">setLVItemEx</a>,
<a href="#SETLVITEMLPARAM">setLVItemlParam</a>,
<a href="#SETLVITEMTEXT">setLVItemText</a>,
<a href="#SETLVSTYLE">setLVStyle</a>
<hr>
