<html>
<head>
<!-- Generated by MAKEDOC v1.1, (c) 2000,2003 by David Cuny, Derek Parnell, Matt Lewis -->
<!-- on 2009/07/23 at 00h20m32 -->
<style>h4 {text-align: right}</style>
<title>Documentation for Win32lib v0.70.18</title>
</head>
<body>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h1><a name="ERROR">Errors</a></h1>
<p><h3>These routines are used to manage warnings and errors occurring as your program runs.
</h3><br>

</p>
<li><a href="#ABORTERR"><i>proc</i> abortErr</a>( sequence errorparam ) &nbsp;&nbsp;Display an error message, run any user-defined cleanup routines, and then abort.
<li><a href="#ATTACHCLEANUP"><i>proc</i> attachCleanUp</a>( routine_id ) &nbsp;&nbsp;Establishes a user defined clean up routine which is invoked just prior to win32lib ending or aborting.
<li><a href="#DETACHCLEANUP"><i>proc</i> detachCleanUp</a>( routine_id ) &nbsp;&nbsp;Removes a user defined clean up routine from the list of attached ones.
<li><a href="#SETWARNING"><i>proc</i> setWarning</a>( integer flag ) &nbsp;&nbsp;Shows or Hides warning messages from user.
<li><a href="#WARNERR"><i>proc</i> warnErr</a>( sequence errorparam ) &nbsp;&nbsp;Display an error message, with option to abort.
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="ABORTERR">[<i>proc</i>]<br>abortErr</a> ( sequence errorparam )</h2>
<h3>Display an error message, run any user-defined cleanup routines, and then abort.</h3>
Category: <a href="#ERROR">Errors</a><br>
<p><p> <em>errorparam</em> can be either a text message or a two-element sequence in which the
first is a text message and the second is an error code (integer).
<p>
If any user-defined clean up routine have been attached, they are invoked prior to
 win32lib's own cleanup routine, then the application is aborted. See <a href="ERROR.htm#ATTACHCLEANUP">attachCleanUp</a>()
for details.
<p>
Example:
<p>
<pre>
       abortErr( {"The tape drive is not responding.", <a href="CONSTANT.htm#W32MSGNUM">w32MsgNum</a> + 17} )
<p>
      abortErr(  "Fatal error. Bummer, dude." )
</pre>
<p>See Also: 
<a href="#ATTACHCLEANUP">attachCleanUp</a>,
<a href="#DETACHCLEANUP">detachCleanUp</a>,
<a href="#SETWARNING">setWarning</a>,
<a href="#WARNERR">warnErr</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="ATTACHCLEANUP">[<i>proc</i>]<br>attachCleanUp</a> ( routine_id )</h2>
<h3>Establishes a user defined clean up routine which is invoked just prior to win32lib ending or aborting.</h3>
<h3>Returns: (INTEGER) The number of clean up routines attached.</h3>
Category: <a href="#ERROR">Errors</a><br>
<p><p>Allows the application to clean up when win32lib application is ending or detects an abort situation.
It is possible to attach multiple clean up routines. If this is done, they are invoked by win32lib in
order of most-recently-attached to first-attached, that is in reverse order that they were attached in.
<p>
The clean up routine, when invoked by win32lib, is passed four parameters...
 <li> <strong>ErrorCode</strong> (integer) Zero if this is a normal end, or the code number for the
error that is causing win32lib to abort.
 <li> <strong>ErrorText</strong> (sequence) The text displayed to the user.
 <li> <strong>ControlId</strong> (integer) The id of the current control (0 => no control is current).
 <li> <strong>LastCleanup</strong> (integer) A flag which is 1 if this is the last user defined cleanup
routine to be invoked, and 0 if there are others still to be invoked.
<p>
 The clean up routine must return an integer <em>flag</em>. If the <em>flag</em> is -1, then no further attached
clean up routines will be invoked before win32lib aborts, otherwise any other routines will
be invoked. You only return -1 if you really do know what the side-effects will be.
<p>
The clean up routines are run before the crash_routines the program may have defined
if using Euphoria v2.5 or higher.
<p>
Example:
<p>
<pre>
   function AppCleanUp(integer ErrCode, sequence ErrText, integer ControlId, integer LastCleanUp)
      . . .
      return 0 -- Continue with other clean up routines.
   end function
<p>
   -- Link in my clean-up routine
   cnt = attachCleanUp( routine_id("AppCleanUp" ))
</pre>
<p>See Also: 
<a href="#ABORTERR">abortErr</a>,
<a href="#DETACHCLEANUP">detachCleanUp</a>,
<a href="#SETWARNING">setWarning</a>,
<a href="#WARNERR">warnErr</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="DETACHCLEANUP">[<i>proc</i>]<br>detachCleanUp</a> ( routine_id )</h2>
<h3>Removes a user defined clean up routine from the list of attached ones.</h3>
<h3>Returns: If unsuccessful this returns -1, else the number of clean up routines still attached.</h3>
Category: <a href="#ERROR">Errors</a><br>
<p><p><p>
Example:
<p>
<pre>
   integer cnt, CU_id
   . . .
   function AppCleanUp(integer ErrCode, sequence ErrText, integer ControlId, integer LastCleanUp)
      . . .
      return 0 -- Continue with other clean up routines.
   end function
<p>
   -- Link in my clean-up routine
   CU_id = routine_id("AppCleanUp" )
   cnt = attachCleanUp( CU_id )
   . . .
   cnt = detachCleanUp( CU_id )
</pre>
<p>See Also: 
<a href="#ABORTERR">abortErr</a>,
<a href="#ATTACHCLEANUP">attachCleanUp</a>,
<a href="#SETWARNING">setWarning</a>,
<a href="#WARNERR">warnErr</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETWARNING">[<i>proc</i>]<br>setWarning</a> ( integer flag )</h2>
<h3>Shows or Hides warning messages from user.</h3>
Category: <a href="#ERROR">Errors</a><br>
<p><p> Since 'warning' messages (triggered by <a href="ERROR.htm#WARNERR">warnErr</a>) are only warnings and
not fatal, it may be advantageous to suppress them in an application.
<p>
 The <em>flag</em> maybe one of ... <br>
 <li> 0 To hide warning messages
 <li> 1 To show warning messages, giving the option to continue or quit.
 <li> 2 To turn all warning messages into fatal errors instead.
<p>
 By default, the setting is <strong>1</strong>
Example:
<p>
<pre>
      -- suppress warning messages
      setWarning( 0 )
</pre>
<p>See Also: 
<a href="#ABORTERR">abortErr</a>,
<a href="#ATTACHCLEANUP">attachCleanUp</a>,
<a href="#DETACHCLEANUP">detachCleanUp</a>,
<a href="#WARNERR">warnErr</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="WARNERR">[<i>proc</i>]<br>warnErr</a> ( sequence errorparam )</h2>
<h3>Display an error message, with option to abort.</h3>
Category: <a href="#ERROR">Errors</a><br>
<p><p> <em>errorparam</em> can be either a text message or a two-element sequence in which the
first is a text message and the second is an error code (integer).
<p>
 This routine will display a dialog window with three buttons. <br>
 <em>[ YES ]</em> : If selected, the program will continue. <br>
 <em>[ NO  ]</em> : if pressed, the program will continue, but future warning about the <strong>same</strong>
 error will be ignored. <br>
 <em>[CANCEL]</em>: if pressed, will stop the program running immediately.
<p>
If any user-defined clean up routine have been attached, they are invoked prior to
 win32lib's own cleanup routine, if the application is aborted. See <a href="ERROR.htm#ATTACHCLEANUP">attachCleanUp</a>()
for details.
Example:
<p>
<pre>
      warnErr( "Bad data. Abort program?" )
</pre>
<p>See Also: 
<a href="#ABORTERR">abortErr</a>,
<a href="#ATTACHCLEANUP">attachCleanUp</a>,
<a href="#DETACHCLEANUP">detachCleanUp</a>,
<a href="#SETWARNING">setWarning</a>
<hr>
