<html>
<head>
<!-- Generated by MAKEDOC v1.1, (c) 2000,2003 by David Cuny, Derek Parnell, Matt Lewis -->
<!-- on 2009/07/23 at 00h20m32 -->
<style>h4 {text-align: right}</style>
<title>Documentation for Win32lib v0.70.18</title>
</head>
<body>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h1><a name="MOUSE">Mouse</a></h1>
<p><h3>These are routines that deal with the mouse and mouse pointer.
</h3><br>

</p>
<li><a href="#CAPTUREMOUSE"><i>proc</i> captureMouse</a>( window ) &nbsp;&nbsp; Send all mouse events to <em>window</em>.
<li><a href="#CHANGEMOUSEPOINTER"><i>proc</i> changeMousePointer</a>( object id, object pointer ) &nbsp;&nbsp; Set the pointer the mouse displays when in <em>id</em>, without saving the previous shape.
<li><a href="#CLICKPOINTERLEFT"><i>proc</i> clickPointerLeft</a>() &nbsp;&nbsp;Simulates the clicking of the left mouse button.
<li><a href="#CREATEMOUSEPOINTER"><i>func</i> createMousePointer</a>( hotspotX, hotspotY, image ) &nbsp;&nbsp;Create a new mouse pointer.
<li><a href="#DRAGPOINTERTO"><i>proc</i> dragPointerTo</a>(sequence pos) &nbsp;&nbsp;Simulates the draging of the left mouse button to a specified position.
<li><a href="#GETPOINTERPO"><i>func</i> getPointerPos</a>() &nbsp;&nbsp;Find where the mouse pointer is on the screen.
<li><a href="#GETPOINTERRELPO"><i>func</i> getPointerRelPos</a>(integer id) &nbsp;&nbsp;Retrieves relative position of the mouse.
<li><a href="#GETWHEELSCROLLLINE"><i>func</i> getWheelScrollLines</a>() &nbsp;&nbsp;Retrieves the number of lines that a mouse wheel movement represents.
<li><a href="#LOADCURSOR"><i>func</i> loadCursor</a>(sequence CursorFile) &nbsp;&nbsp;Loads a cursor from a file.
<li><a href="#RELEASEMOUSE"><i>proc</i> releaseMouse</a>() &nbsp;&nbsp;Return control of the mouse to Windows.
<li><a href="#RESTOREMOUSEPOINTER"><i>proc</i> restoreMousePointer</a>( object id) &nbsp;&nbsp; Gets back the previous pointer the mouse had before the last <a href="MOUSE.htm#SETMOUSEPOINTER">setMousePointer</a> call.
<li><a href="#SETDRAGPOINTER"><i>proc</i> setDragPointer</a>( object style) &nbsp;&nbsp;Sets the mouse pointer shape to use when dragging.
<li><a href="#SETMOUSEPOINTER"><i>proc</i> setMousePointer</a>( object id, object pointer ) &nbsp;&nbsp; Set the pointer the mouse displays when in <em>id</em>.
<li><a href="#SETPOINTERPO"><i>proc</i> setPointerPos</a>(sequence pos) &nbsp;&nbsp;Moves the mouse pointer to a specified spot on the screen.
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="CAPTUREMOUSE">[<i>proc</i>]<br>captureMouse</a> ( window )</h2>
<h3> Send all mouse events to <em>window</em>.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p> All mouse coordinates become relative to <em>window</em>. To release the mouse, use <a href="MOUSE.htm#RELEASEMOUSE">releaseMouse</a>.
<p>
Example:
<p>
<pre>
          -- grab the mouse for TheWindow
           <a href="MOUSE.htm#CAPTUREMOUSE">captureMouse</a>( TheWindow )
</pre>
<p>See Also: 
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="CHANGEMOUSEPOINTER">[<i>proc</i>]<br>changeMousePointer</a> ( object id, object pointer )</h2>
<h3> Set the pointer the mouse displays when in <em>id</em>, without saving the previous shape.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p> This behaves like <a href="MOUSE.htm#SETMOUSEPOINTER">setMousePointer</a>(), but does not stack the previous shape for later restore.
 It just changes the top of the stack shape. <br>
However, using a special style value (0, -1 or -2) will cause no change to take place.
<p>
 Use this routine, rather than <a href="MOUSE.htm#SETMOUSEPOINTER">setMousePointer</a>(), when you continuously monitor the mouse
position and update cursor accordingly, as it avoids a lag effect when the mouse lingers in
some area of a window and then leaves to an area that displays another shape.
<p>
Example:
<p>
<pre>
     -- Change mouse pointer in MyWindow and all its child controls to hourglass
      <a href="MOUSE.htm#SETMOUSEPOINTER">setMousePointer</a>( {MyWindow}, WaitPointer )
     -- Do some long job, and allow pinpointing some place
     --    changeMousePointer(MyWindow,Cross)
     -- Restore the shape that was changed for WaitPointer.
      <a href="MOUSE.htm#RESTOREMOUSEPOINTER">restoreMousePointer</a>( {MyWindow} )
<p>
       <a href="MOUSE.htm#CHANGEMOUSEPOINTER">changeMousePointer</a>( ListPanel, "SpecialCursor.cur")
     -- this one does all children of WindowX recursively
       <a href="MOUSE.htm#CHANGEMOUSEPOINTER">changeMousePointer</a>( {WindowX}, "hourglass")
</pre>
<p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="CLICKPOINTERLEFT">[<i>proc</i>]<br>clickPointerLeft</a> ()</h2>
<h3>Simulates the clicking of the left mouse button.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p><p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="CREATEMOUSEPOINTER">[<i>func</i>]<br>createMousePointer</a> ( hotspotX, hotspotY, image )</h2>
<h3>Create a new mouse pointer.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p> The <em>hotspotX</em> and <em>hotspotY</em> values are the "hotspot". The image is
a 2x2 text sequence of the pointer. Bytes are interpreted as follows:
<p>
 &nbsp;&nbsp;  <code>' '</code> = transparent <br>
 &nbsp;&nbsp;  <code>'.'</code> = solid white <br>
 &nbsp;&nbsp;  <code>'x'</code> = solid black <br>
<p>
Example:
<p>
<pre>
       constant PlusPointer = <a href="MOUSE.htm#CREATEMOUSEPOINTER">createMousePointer</a>( 8, 8, {
          "     xxxxxx      ",
          "     x....xx     ",
          "     x....xx     ",
          "     x....xx     ",
          "     x....xx     ",
          "xxxxxx....xxxxxx ",
          "x..............xx",
          "x..............xx",
          "x..............xx",
          "x..............xx",
          "xxxxxx....xxxxxxx",
          " xxxxx....xxxxxxx",
          "     x....xx     ",
          "     x....xx     ",
          "     x....xx     ",
          "     xxxxxxx     ",
          "      xxxxxx     "} )
<p>
          -- set as pointer for MyWindow
           <a href="MOUSE.htm#SETMOUSEPOINTER">setMousePointer</a>( MyWindow, PlusPointer )
<p>
</pre>
<p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="DRAGPOINTERTO">[<i>proc</i>]<br>dragPointerTo</a> (sequence pos)</h2>
<h3>Simulates the draging of the left mouse button to a specified position.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p> <em>pos</em> is a two-element sequence that contains the <strong>X</strong> and <strong>Y</strong> location to drag the pointer to.
<p>
Example
<pre>
  dragPointerTo( {100, 200} )
</pre>
<p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETPOINTERPO">[<i>func</i>]<br>getPointerPos</a> ()</h2>
<h3>Find where the mouse pointer is on the screen.</h3>
<h3>Returns: SEQUENCE: {X,Y} The mouse position.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p> This returns a two-element sequence that specifies the <strong>X</strong> and <strong>Y</strong> position
of the mouse pointer.
<p>
Example:
<pre>
 sequence pos
<p>
  pos = getPointerPos()
  if pos[1] > 200 then
      -- code goes here...
  end if
</pre>
<p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETPOINTERRELPO">[<i>func</i>]<br>getPointerRelPos</a> (integer id)</h2>
<h3>Retrieves relative position of the mouse.</h3>
<h3>Returns:  SEQUENCE: Mouse {x,y} position, relative to the control specified by <em>id</em>.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p><p>
Example:
<p>
<pre>
 sequence pos
<p>
  pos = getPointerRelPos(myWindow)
  if pos[1] > 200 then
      -- code goes here...
  end if
</pre>
<p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="GETWHEELSCROLLLINE">[<i>func</i>]<br>getWheelScrollLines</a> ()</h2>
<h3>Retrieves the number of lines that a mouse wheel movement represents.</h3>
<h3>Returns: ATOM: The number of lines.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p><p>
Example:
<pre>
  atom cnt
  cnt = getWheelScrollLines()
</pre>
<p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="LOADCURSOR">[<i>func</i>]<br>loadCursor</a> (sequence CursorFile)</h2>
<h3>Loads a cursor from a file.</h3>
<h3>Returns: ATOM: The handle to a loaded cursor</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p><p>
If this returns zero, then the cursor was not loaded.
<p>
 <a href="#EXAMPLE">Example</a>:
<pre>
      mC = loadCursor("hands.ani")
      setMousePointer(myList, mC)
</pre>
<p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="RELEASEMOUSE">[<i>proc</i>]<br>releaseMouse</a> ()</h2>
<h3>Return control of the mouse to Windows.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p> This is called after <a href="MOUSE.htm#CAPTUREMOUSE">captureMouse</a> to put control of the mouse
back to normal.
<p>
Example:
<p>
<pre>
          -- release the mouse.
           <a href="MOUSE.htm#RELEASEMOUSE">releaseMouse</a>()
</pre>
<p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="RESTOREMOUSEPOINTER">[<i>proc</i>]<br>restoreMousePointer</a> ( object id)</h2>
<h3> Gets back the previous pointer the mouse had before the last <a href="MOUSE.htm#SETMOUSEPOINTER">setMousePointer</a> call.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p> This restores the pointer shape for <em>id</em> by popping it from the <em>id</em>'s stack. <br>
 <em>id</em> can either be a single control ID, or a sequence containing a control ID.
You use the second form to restore the pointer for all the controls contained
 in <em>id</em>.
<p>
Example:
<p>
<pre>
-- Change mouse pointer in MyWindow to hourglass
 <a href="MOUSE.htm#SETMOUSEPOINTER">setMousePointer</a>( {MyWindow}, WaitPointer )
-- Do some long job...
. . .
-- Restore the previous shape.
 <a href="MOUSE.htm#RESTOREMOUSEPOINTER">restoreMousePointer</a>( {MyWindow} )
</pre>
<p>
<p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETDRAGPOINTER">[<i>proc</i>]<br>setDragPointer</a> ( object style)</h2>
<h3>Sets the mouse pointer shape to use when dragging.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p> Win32lib supports four cursor shapes for dragging. <br>
 <em>style</em> can be either an atom (handle) or a sequence of four handles. If it is an
 atom then set all four drag pointers to the same value. <br>
 The sequence represents these shapes: <br>
<ul>
 <li> [1] - Used when no keys pressed
 <li> [2] - Used when the shift key is pressed
 <li> [3] - Used when the control key is pressed
 <li> [4] - Used when the Alt key is pressed.
 </ul> 
 If <em>style</em> is a sequence, if any element is <strong>0</strong> then the current value
for this position is not changed.
<p>
Initially all shapes are set to the CrossPointer.
<p>
 <em>Handles</em> can be either one of the predefined system shapes, one created by
 <a href="MOUSE.htm#CREATEMOUSEPOINTER">createMousePointer</a>() or one returned by <a href="MOUSE.htm#LOADCURSOR">loadCursor</a>().
<p>
Example:
<p>
<pre>
      setDragPointer( IconPointer )
<p>
      setDragPointer( {IconPointer, -- set the 'normal' shape
                       0  -- leave exsting 'Shift' shape alone
                       loadCursor(mycursor), -- load 'Ctrl' shape from a file.
                    } )
<p>
</pre>
<p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETMOUSEPOINTER">[<i>proc</i>]<br>setMousePointer</a> ( object id, object pointer )</h2>
<h3> Set the pointer the mouse displays when in <em>id</em>.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p> This saves the current pointer for <em>id</em> by pushing it onto the <em>id</em>'s stack
 and sets the <em>pointer</em> as the new shape. You can get the previous pointer
 shape by calling <a href="MOUSE.htm#RESTOREMOUSEPOINTER">restoreMousePointer</a>().
<p>
 <em>id</em> can either be a single control ID, or a sequence that contains a control
ID. You use the second form to set the pointer for all the controls contained
 in <em>id</em>.
<p>
 The initial mouse pointer displayed is the <em>ArrowPointer</em>, except
 for <a href="#TEXTEDIT">TextEdit</a> and <a href="CONTROL.htm#MLETEXT">MleText</a> controls, which use the <em>IBeamPointer</em>.
<p>
 The <em>pointer</em> can either be a special value, a system pointer, or one created with
 the <a href="MOUSE.htm#CREATEMOUSEPOINTER">createMousePointer</a> function, or a path to .CUR or .ANI file. Special values are:
 <li> 0: restore mouse pointer to its previous shape;
 <li> -1: restor mouse pointer to its default shape, popping off any change;
 <li> -2: do nothing
<p>
Repeated use of setMousePointer() with the same shape will result in it being stored only
 once. This way, a single call to <a href="MOUSE.htm#RESTOREMOUSEPOINTER">restoreMousePointer</a>() willl restore the previous shape,
if any.
<p>
 If the mouse pointer is not above <em>id</em>, the cursor shape change is effective only when the
 cursor comes above <em>id</em>.
<p>
 Known system mouse pointers are listed <a href="win32_constants.htm#System mouse pointers">here</a> 
Example:
<p>
<pre>
     -- Change mouse pointer in MyWindow and all its child controls to hourglass
      <a href="MOUSE.htm#SETMOUSEPOINTER">setMousePointer</a>( {MyWindow}, WaitPointer )
     -- Do some long job...
     . . .
     -- Restore the previous shape.
      <a href="MOUSE.htm#RESTOREMOUSEPOINTER">restoreMousePointer</a>( {MyWindow} )
<p>
     -- use a shape stored in some external file
       <a href="MOUSE.htm#SETMOUSEPOINTER">setMousePointer</a>( ListPanel, "SpecialCursor.cur")
     -- this one does all children of WindowX recursively
       <a href="MOUSE.htm#SETMOUSEPOINTER">setMousePointer</a>( {WindowX}, "hourglass")
</pre>
<p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETPOINTERPO">setPointerPos</a>
<hr>
<h4>Documentation for Win32lib v0.70.18<br>
<a href="index.htm#makedocTOC">Table of Contents</a></h4>
<h2><a name="SETPOINTERPO">[<i>proc</i>]<br>setPointerPos</a> (sequence pos)</h2>
<h3>Moves the mouse pointer to a specified spot on the screen.</h3>
Category: <a href="#MOUSE">Mouse</a><br>
<p><p> <em>pos</em> is a two-element sequence that specifies the <strong>X</strong> and <strong>Y</strong> position
that the mouse pointer is to be moved to.
<p>
Example:
<pre>
      -- Move the mouse pointer to 120,76
      setPointerPos({120, 76})
</pre>
<p>See Also: 
<a href="#CAPTUREMOUSE">captureMouse</a>,
<a href="#CHANGEMOUSEPOINTER">changeMousePointer</a>,
<a href="#CLICKPOINTERLEFT">clickPointerLeft</a>,
<a href="#CREATEMOUSEPOINTER">createMousePointer</a>,
<a href="#DRAGPOINTERTO">dragPointerTo</a>,
<a href="#GETPOINTERPO">getPointerPos</a>,
<a href="#GETPOINTERRELPO">getPointerRelPos</a>,
<a href="#GETWHEELSCROLLLINE">getWheelScrollLines</a>,
<a href="#LOADCURSOR">loadCursor</a>,
<a href="#RELEASEMOUSE">releaseMouse</a>,
<a href="#RESTOREMOUSEPOINTER">restoreMousePointer</a>,
<a href="#SETDRAGPOINTER">setDragPointer</a>,
<a href="#SETMOUSEPOINTER">setMousePointer</a>
<hr>
