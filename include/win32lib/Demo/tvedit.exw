-- tvedit.exw Version 1.0
-- Author: Euman 20/June/2002
-- This demonstrates how to edit a treeview control.

include win32lib.ew
without warning
object VOID

integer
    MainWin,
    HelpText,
    TV,
    TVPopup,
    MI_AddItem,
    MI_Rename,
    MI_AddChild,
    Edit_Id

atom
    closefolder,
    openfolder

sequence folders

integer vEditSource vEditSource = -1
integer vNewCount vNewCount = 0
--------------------------------
function TVBeginEdit(integer id, atom hWnd, atom wParam, atom lParam)
--------------------------------
    atom hWnd_Edit

    hWnd_Edit = w32Func( xSendMessage, {getHandle(TV), TVM_GETEDITCONTROL, 0, 0 } )

    Edit_Id = subClassControl({EditText, MainWin}, hWnd_Edit)


    if vEditSource = 1 then
        setWindowBackColor(Edit_Id, BrightCyan)
        vNewCount += 1
        setText(Edit_Id, sprintf("New Item Text %d", vNewCount))

    elsif vEditSource = 0 then
        setWindowBackColor(Edit_Id, Yellow)

    elsif vEditSource = 2 then
        setWindowBackColor(Edit_Id, BrightGreen)

    elsif vEditSource = 3 then
        setWindowBackColor(Edit_Id, Parchment)
        vNewCount += 1
        setText(Edit_Id, sprintf("New Child Text %d", vNewCount))

    end if

    setFocus(Edit_Id)
    return {kReturnNow}
end function

--------------------------------
function TVEndEdit(integer id, atom hWnd, atom wParam, atom lParam)
--------------------------------
    object lNewText
    integer lRC
    integer lTVI
              
    lNewText = fetch(lParam, TVDISPINFO_TVITEMpszText)
    if sequence(lNewText) then
        lRC = w32True
        lTVI = getId( {TV, fetch( lParam, TVDISPINFO_TVITEMhItem )} )
        setText( {TV, lTVI}, lNewText)

        if find(vEditSource,{1, 3}) then
            setFocus( {TV, lTVI} )
        end if

        -- Get rid of this so I can reuse the id.
        destroy( Edit_Id )

    else
        lRC = w32False
    end if


    vEditSource = -1
    return {kReturnNow, lRC}
end function


--------------------------------
procedure Mouse_TV(integer self, integer event, sequence parms)
--------------------------------
    integer index
    if parms[1] = WM_RBUTTONDOWN then
        popup({TVPopup,self}, parms[2]-10, parms[3]-10 )
    end if
end procedure

--------------------------------
procedure Click_MI_AddItem(integer self, integer event, sequence parms )
--------------------------------
    integer index
    integer lParent

    lParent = getTVParent( getIndex(TV) )
    folders &= addTVItem( TV, closefolder, openfolder,  "", lParent )
    index = folders[length(folders)]

    vEditSource = 1
    VOID = w32Func( xSendMessage, {getHandle(TV), TVM_EDITLABEL, 0, getHandle({TV,index}) } )
end procedure

--------------------------------
procedure Click_MI_AddChild(integer self, integer event, sequence parms )
--------------------------------
    integer index
    integer lParent

    lParent = getIndex(TV)
    folders &= addTVItem( TV, closefolder, openfolder,  "", lParent )
    index = folders[length(folders)]

    expandItem( lParent )
    vEditSource = 3
    VOID = w32Func( xSendMessage, {getHandle(TV), TVM_EDITLABEL, 0, getHandle({TV,index}) } )

end procedure

--------------------------------
procedure Click_MI_Rename(integer self, integer event, sequence parms )
--------------------------------
    integer index

    index = getIndex(TV)
    vEditSource = 2
    VOID = w32Func( xSendMessage, {getHandle(TV), TVM_EDITLABEL, 0, getHandle({TV,index}) } )
end procedure

atom vDownKey
vDownKey = -1
--------------------------------
procedure KeyDown_TV(integer self, integer event, sequence parms )
--------------------------------
    integer index

    if find(parms[1],{VK_RETURN,VK_F2,VK_RIGHT,VK_DOWN, VK_DELETE}) = 0 then
        return
    end if

    if find(parms[1],{VK_RETURN,VK_F2}) != 0 and parms[2] = 0 then
        vDownKey = parms[1]
        index = getIndex(TV)
        vEditSource = 0
        VOID = w32Func( xSendMessage, {getHandle(TV), TVM_EDITLABEL, 0, getHandle({TV,index}) } )

    elsif parms[1] = VK_RIGHT and parms[2] = ControlMask then  
        Click_MI_AddChild(self, event, parms)

    elsif parms[1] = VK_DOWN and parms[2] = ControlMask then  
        Click_MI_AddItem(self, event, parms)

    elsif parms[1] = VK_DELETE and parms[2] = ControlMask then

        index = getIndex(TV)
        VOID = deleteItem( TV, index)

    end if

end procedure

--------------------------------
procedure KeyPress_TV(integer self, integer event, sequence parms )
--------------------------------
    -- Stops Windows beeping at me for using up the RETURN key.
    if parms[1] != vDownKey then
        return
    end if

    vDownKey = -1
    returnValue(-1)
end procedure

------------------------------------------------
procedure Activate_MainWin(integer self, integer event, sequence parms)
------------------------------------------------

    expandItem( folders[1] )
    setIndex(TV, folders[2])
    setFocus(TV)
end procedure

------------------------------------------------
-- Application Initiation
------------------------------------------------
function AppInit()
    integer lRC

    lRC = 0

    Edit_Id = -1
    closefolder = addIcon( extractIcon( "clsdfold.ico" ))
    openfolder  = addIcon( extractIcon( "openfold.ico" ))

    MainWin =  create( Window, "Treeview Edit Label Demo", 0, 1, 1, 492, 380, { WS_DLGFRAME, WS_SYSMENU})
    HelpText = create( LText, "", MainWin, 15, 5, 400, 75, 0)

    setText(HelpText, "You can edit an item by pressing RETURN or F2\n" &
                      "Add a Child item by pressing Ctrl-Right\n" &
                      "Add a Sibling item by pressing Ctrl-Down\n" &
                      "Delete an item by pressing Ctrl-Delete\n" &
                      "Press the Right Mouse Button for extra options")

    TV = create(TreeView, "TreeView", MainWin, 10, 95, 464, 230,
             or_all({TVS_HASLINES,TVS_LINESATROOT,TVS_HASBUTTONS,TVS_EDITLABELS, TVS_SHOWSELALWAYS}) )

    folders = {}
    folders &= addTVItem( TV, closefolder, openfolder, "Root Item" , 0 )
    folders &= addTVItem( TV, closefolder, openfolder, "Item One" , folders[1] )

    TVPopup = create( Popup, "", TV, 0, 0, 0, 0, 0 )
    MI_AddItem = create( MenuItem, "New Item", TVPopup, 0, 0, 0, 0, 0 )
    MI_AddChild = create( MenuItem, "New Child", TVPopup, 0, 0, 0, 0, 0 )
    MI_Rename  = create( MenuItem,   "Rename", TVPopup, 0, 0, 0, 0, 0 )


    setHandler(MainWin, w32HActivate,    routine_id("Activate_MainWin"))
    setHandler(TV,          w32HMouse,   routine_id("Mouse_TV"))
    setHandler(MI_AddItem,  w32HClick,   routine_id("Click_MI_AddItem"))
    setHandler(MI_AddChild, w32HClick,   routine_id("Click_MI_AddChild"))
    setHandler(MI_Rename,   w32HClick,   routine_id("Click_MI_Rename"))
    setHandler(TV,          w32HKeyDown, routine_id("KeyDown_TV"))
    setHandler(TV,          w32HKeyPress,routine_id("KeyPress_TV"))

    VOID = setNotifyHandler( TVN_BEGINLABELEDIT, routine_id("TVBeginEdit"))
    VOID = setNotifyHandler( TVN_ENDLABELEDIT, routine_id("TVEndEdit"))

    return lRC
end function

if AppInit() = 0 then
    WinMain( MainWin, Normal)
end if
