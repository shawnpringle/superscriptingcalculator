without warning
include win32lib.ew

integer vWin
sequence vBox
integer vBoxMap
integer vSize
integer vBoxSize
integer vGap
integer vEmptyColor
integer vPlayerColor
integer vComputerColor
integer vClickedColor
integer vUnclickedColor

sequence vLevelText

constant fColor = 1,
         fLeft = 2,
         fTop = 3,
         fRight = 4,
         fBottom = 5,
         SIZEOF_Box = 5



procedure DrawOneBox(integer pBoxId, integer pBorder)
    integer lTop
    integer lLeft

    setPenColor(vBoxMap, vBox[pBoxId][fColor])
    drawRectangle(vBoxMap, 1, vBox[pBoxId][fLeft]+1,
                              vBox[pBoxId][fTop]+1,
                              vBox[pBoxId][fRight]-1,
                              vBox[pBoxId][fBottom]-1
                              )
    setPenColor(vBoxMap, pBorder)
    drawRectangle(vBoxMap, 0, vBox[pBoxId][fLeft],
                              vBox[pBoxId][fTop],
                              vBox[pBoxId][fRight],
                              vBox[pBoxId][fBottom]
                              )

end procedure

procedure InitializeBoxes()
    integer lTop
    integer lLeft
    integer x
    integer lMapWidth

    lMapWidth = (vSize * (vBoxSize + vGap)) - vGap + 20

    setRect(vBoxMap, 0,0,lMapWidth, lMapWidth,0)
    setPenColor(vBoxMap, BrightWhite)
    drawRectangle(vBoxMap, 1, 0, 0, lMapWidth, lMapWidth)

    vBox = repeat(repeat(0,SIZEOF_Box), vSize * vSize)

    lTop  = 10 - (vBoxSize + vGap)
    x  = 1
    for i = 1 to vSize do
        lLeft = 10 -(vBoxSize + vGap)
        lTop += (vBoxSize + vGap)
        for j = 1 to vSize do
            lLeft += (vBoxSize + vGap)
            vBox[x][fColor] = vEmptyColor
            vBox[x][fLeft] = lLeft
            vBox[x][fTop] = lTop
            vBox[x][fRight] = lLeft + vBoxSize
            vBox[x][fBottom] = lTop + vBoxSize
            DrawOneBox(x, vUnclickedColor)
            x += 1
        end for
    end for

    setClientRect(vWin, lMapWidth,  55 + lMapWidth)
    repaintFG(vWin)
end procedure

procedure Paint_Arena(integer self, integer event, sequence parms)
    sequence lMapWidth
    sequence lTextRect
    sequence lWinRect

    setFont(self, "Arial", 15, 0)
    lTextRect = getTextExtent(self, vLevelText)
    lWinRect = getClientRect(self)
    setTextColor(self, Green)
    wPuts({self, floor((lWinRect[3]-lTextRect[1])/2), 55 - lTextRect[2] - 5}, vLevelText)
    copyBlt(self, 0, 55, vBoxMap)
end procedure

global procedure Click_Arena(integer self, integer event, sequence parms)
    integer x
    sequence lXY

    lXY = getPointerRelPos(self) - {00,55}

    -- Scan through the boxes to see which one I clicked in.
    x = 0
    for i = 1 to length(vBox) do
        if lXY[1] < vBox[i][fRight] and
           lXY[1] >= vBox[i][fLeft] and
           lXY[2] < vBox[i][fBottom] and
           lXY[2] >= vBox[i][fTop] then
            x = i
            exit
        end if
    end for

    if x = 0 then
        -- Clicked outside of all the boxes.
        return
    end if

    if vBox[x][fColor] != vEmptyColor then
        -- Clicked in a coloured box so ignore it.
        return
    end if

    -- Mark this box as the player's box and update the window display.
    vBox[x][fColor] = vPlayerColor
    DrawOneBox(x, vClickedColor)
    repaintFG(self)
    doEvents(self)

    if equal(vLevelText, "EASY") then
        -- Find a random empty box.
        x = w32rand32(vSize * vSize)
        while vBox[x][fColor] != vEmptyColor do
            x = w32rand32(vSize * vSize)
        end while

    elsif equal(vLevelText, "MEDIUM") then
    else
    end if


    doEvents(self)
    -- Pretend to think
    setMousePointer(self, WaitPointer)
    w32Sleep( w32rand32(2500) )
    restoreMousePointer(self)

    -- Mark this box as the player's box and update the window display.
    vBox[x][fColor] = vComputerColor
    DrawOneBox(x, vClickedColor)
    repaintFG(self)
    doEvents(0)

    -- Update the scores.

end procedure

global function main(sequence pCmdLine)

    registerRoutine("Click_Arena", routine_id("Click_Arena"))
    registerRoutine("Paint_Arena", routine_id("Paint_Arena"))

    vBox = {}
    vBoxSize = 40
    vGap = 5
    vEmptyColor = #E0E0E0
    vPlayerColor = Yellow
    vComputerColor = Blue
    vClickedColor = BrightRed
    vUnclickedColor = Black
    vLevelText = "EASY"
    vSize = 6

    -- Draw form
    createForm({
        "Window, Arena, size=(0,0), at=(0,0), flags=(new,ws_caption,ws_sysmenu)" &
           ", event=(paint,click)"
    })
    vWin = getNameId("Arena")
    vBoxMap = createEx(Pixmap,"", 0, 0, 0, 1, 1, 0, 0)

    InitializeBoxes()

    return 0
end function

include w32start.ew
