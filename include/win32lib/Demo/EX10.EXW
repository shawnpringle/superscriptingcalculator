-- ex10.exw
--
-- Demonstrate scroll bars

include win32lib.ew
without warning
constant Colors = {Gray,White,Cyan,Green,Orange,Purple,SkyBlue,Yellow,Red,Olive,Parchment,Blue}

createForm({"Scroll Bar Example, left=center, top = 20, width=90%, height=250,",
            "HScroll, Horz,width=80%, height=16," &
                  "range=(6,100), delta=(1,10), position=14",
            "VScroll, Vert, top=20,right=22, width=20, height=200," &
                  sprintf("range=(1,%d),",length(Colors)) &
                  "delta=(1,2), position=1",
            "Label, Colors, from=Vert, left=**,top=0,height=18",
            "EditBox,name=eb, bottom=30, width= 70, height=30"

           })


constant HSBar = getNameId("Horz"),
         VSBar = getNameId("Vert"),
         MainWin = getNameId("ScrollBarExample"),
         ColorLbl = getNameId("Colors"),
         EB       = getNameId("eb")
setFont( EB, "Arial", 18, 0 )

-- scroll action
global procedure Scroll_Horz( integer self, integer event, sequence parms )
    repaintWindow( MainWin )
end procedure
registerRoutine("Scroll_Horz", routine_id("Scroll_Horz"))

global procedure Scroll_Vert( integer self, integer event, sequence parms )
    repaintWindow( MainWin )
end procedure
registerRoutine("Scroll_Vert", routine_id("Scroll_Vert"))

setUserProperty(EB, "flag", 0)
global procedure KeyUp_EB( integer self, integer event, sequence parms )
	object val
	sequence range
	
	val = getNumber(self)
	if val = 0 then
		range = getScrollRange(HSBar)
		val = range[1]
	end if
	if val != getScrollPos(HSBar) then
		range = getScrollRange(HSBar)
		if val >= range[1] and val <= range[2] then
			setUserProperty(EB, "flag", 1)
			setScrollPos(HSBar, val)
			setUserProperty(EB, "flag", 0)
		end if
	end if
	
end procedure
registerRoutine("KeyUp_eb", routine_id("KeyUp_EB"))

-- paint action
global procedure Paint_ScrollBarExample( integer self, integer event, sequence parms )

    integer fontSize

    setWindowBackColor(MainWin, Colors[getScrollPos(VSBar)])
    setWindowBackColor(ColorLbl, Colors[getScrollPos(VSBar)])
    fontSize = getScrollPos(HSBar)
	if equal(getUserProperty(EB, "flag"), {0}) then
		setText(EB, fontSize)
	end if
    setFont( self, "Times New Roman", fontSize, 0 )
    wPrintf( {self,5,30}, "%d points", {fontSize} )

end procedure
registerRoutine("Paint_ScrollBarExample", routine_id("Paint_ScrollBarExample"))

include w32Start.ew
